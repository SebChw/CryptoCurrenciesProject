<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="class_currency_factory" kind="class" language="C++" prot="public">
    <compoundname>CurrencyFactory</compoundname>
    <includes refid="_currency_factory_8h" local="no">CurrencyFactory.h</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_currency_factory_1adf36cbb1ab012cf64fcbe7c1308aabad" prot="private" static="yes" mutable="no">
        <type>string</type>
        <definition>string CurrencyFactory::memeNames</definition>
        <argsstring>[3]</argsstring>
        <name>memeNames</name>
        <initializer>= {&quot;Doge&quot;, &quot;SOLID&quot;, &quot;Trololo&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/CurrencyFactory.h" line="15" column="19" bodyfile="Utils/CurrencyFactory.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_currency_factory_1a8d658392e234c7db24ba23f15ca80883" prot="private" static="yes" mutable="no">
        <type>string</type>
        <definition>string CurrencyFactory::cryptoNames</definition>
        <argsstring>[5]</argsstring>
        <name>cryptoNames</name>
        <initializer>= {&quot;BitCoin&quot;, &quot;Etherum&quot;, &quot;Solana&quot;, &quot;Cardano&quot;, &quot;Tether&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/CurrencyFactory.h" line="16" column="19" bodyfile="Utils/CurrencyFactory.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_currency_factory_1a3ae1d50f0ff08d1abcd577b1f9640a4e" prot="private" static="yes" mutable="no">
        <type>string</type>
        <definition>string CurrencyFactory::fiatNames</definition>
        <argsstring>[5]</argsstring>
        <name>fiatNames</name>
        <initializer>= {&quot;zloty&quot;, &quot;dolar&quot;, &quot;kuna&quot;, &quot;euro&quot;, &quot;yen&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/CurrencyFactory.h" line="17" column="19" bodyfile="Utils/CurrencyFactory.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_currency_factory_1a311308a82f52f6b9e0c270c893408cd5" prot="private" static="yes" mutable="no">
        <type>string</type>
        <definition>string CurrencyFactory::algorithmNames</definition>
        <argsstring>[3]</argsstring>
        <name>algorithmNames</name>
        <initializer>= {&quot;GCD&quot;, &quot;BubbleSort&quot;, &quot;BogoSort&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/CurrencyFactory.h" line="18" column="19" bodyfile="Utils/CurrencyFactory.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_currency_factory_1a178608c09ab4df19d3f9852f16a6f66e" prot="private" static="yes" mutable="no">
        <type>string</type>
        <definition>string CurrencyFactory::commodityNames</definition>
        <argsstring>[3]</argsstring>
        <name>commodityNames</name>
        <initializer>= {&quot;Cows&quot;, &quot;coal&quot;, &quot;aluminium&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/CurrencyFactory.h" line="19" column="19" bodyfile="Utils/CurrencyFactory.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_currency_factory_1aeac096c5123b0492b923118ef3ef3a4f" prot="private" static="no" mutable="no">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt;string&gt; CurrencyFactory::createdCurrenciesNames</definition>
        <argsstring></argsstring>
        <name>createdCurrenciesNames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/CurrencyFactory.h" line="20" column="12" bodyfile="Utils/CurrencyFactory.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_currency_factory_1a6b5b799fee0adcd0ff295936bcfa6b6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CurrencyFactory::CurrencyFactory</definition>
        <argsstring>()</argsstring>
        <name>CurrencyFactory</name>
        <briefdescription>
<para>In here we just set the random seed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/CurrencyFactory.h" line="23" column="5" bodyfile="Utils/CurrencyFactory.cpp" bodystart="10" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="class_currency_factory_1a75fbd30235b72b571b0d6a6eaec0ae77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_currency" kindref="compound">Currency</ref> *</type>
        <definition>Currency * CurrencyFactory::generateFiatCurrency</definition>
        <argsstring>()</argsstring>
        <name>generateFiatCurrency</name>
        <briefdescription>
<para>Function generating random fiat <ref refid="class_currency" kindref="compound">Currency</ref> with all attributes set to random values and appending its name to the vector of all currencies generated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Really sorry for setting amount this way but I had to use this...</para>
        </inbodydescription>
        <location file="Utils/CurrencyFactory.h" line="24" column="14" bodyfile="Utils/CurrencyFactory.cpp" bodystart="17" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_currency_factory_1acc8e61d01acdbdf91d2fa02dc427d1ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_currency" kindref="compound">Currency</ref> *</type>
        <definition>Currency * CurrencyFactory::generateCryptoCurrency</definition>
        <argsstring>()</argsstring>
        <name>generateCryptoCurrency</name>
        <briefdescription>
<para>Function generating random crypto <ref refid="class_currency" kindref="compound">Currency</ref> with all attributes set to random values and appending its name to the vector of all currencies generated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Really sorry for setting amount this way but I had to use this...</para>
        </inbodydescription>
        <location file="Utils/CurrencyFactory.h" line="25" column="14" bodyfile="Utils/CurrencyFactory.cpp" bodystart="28" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_currency_factory_1ac8c95a7494324d65634fb9561c4e4989" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt; string &gt; CurrencyFactory::getCreatedCurrenciesNames</definition>
        <argsstring>()</argsstring>
        <name>getCreatedCurrenciesNames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>vector with names of all generated cryptoCurrencies </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/CurrencyFactory.h" line="26" column="12" bodyfile="Utils/CurrencyFactory.cpp" bodystart="72" bodyend="75"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class that has some predefined names and based on them generates random currencies. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Utils/CurrencyFactory.h" line="13" column="1" bodyfile="Utils/CurrencyFactory.h" bodystart="14" bodyend="27"/>
    <listofallmembers>
      <member refid="class_currency_factory_1a311308a82f52f6b9e0c270c893408cd5" prot="private" virt="non-virtual"><scope>CurrencyFactory</scope><name>algorithmNames</name></member>
      <member refid="class_currency_factory_1a178608c09ab4df19d3f9852f16a6f66e" prot="private" virt="non-virtual"><scope>CurrencyFactory</scope><name>commodityNames</name></member>
      <member refid="class_currency_factory_1aeac096c5123b0492b923118ef3ef3a4f" prot="private" virt="non-virtual"><scope>CurrencyFactory</scope><name>createdCurrenciesNames</name></member>
      <member refid="class_currency_factory_1a8d658392e234c7db24ba23f15ca80883" prot="private" virt="non-virtual"><scope>CurrencyFactory</scope><name>cryptoNames</name></member>
      <member refid="class_currency_factory_1a6b5b799fee0adcd0ff295936bcfa6b6a" prot="public" virt="non-virtual"><scope>CurrencyFactory</scope><name>CurrencyFactory</name></member>
      <member refid="class_currency_factory_1a3ae1d50f0ff08d1abcd577b1f9640a4e" prot="private" virt="non-virtual"><scope>CurrencyFactory</scope><name>fiatNames</name></member>
      <member refid="class_currency_factory_1acc8e61d01acdbdf91d2fa02dc427d1ca" prot="public" virt="non-virtual"><scope>CurrencyFactory</scope><name>generateCryptoCurrency</name></member>
      <member refid="class_currency_factory_1a75fbd30235b72b571b0d6a6eaec0ae77" prot="public" virt="non-virtual"><scope>CurrencyFactory</scope><name>generateFiatCurrency</name></member>
      <member refid="class_currency_factory_1ac8c95a7494324d65634fb9561c4e4989" prot="public" virt="non-virtual"><scope>CurrencyFactory</scope><name>getCreatedCurrenciesNames</name></member>
      <member refid="class_currency_factory_1adf36cbb1ab012cf64fcbe7c1308aabad" prot="private" virt="non-virtual"><scope>CurrencyFactory</scope><name>memeNames</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
