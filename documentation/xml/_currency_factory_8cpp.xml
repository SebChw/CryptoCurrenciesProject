<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_currency_factory_8cpp" kind="file" language="C++">
    <compoundname>CurrencyFactory.cpp</compoundname>
    <includes refid="_currency_factory_8h" local="yes">CurrencyFactory.h</includes>
    <incdepgraph>
      <node id="10">
        <label>BackedCryptoCurrency.h</label>
        <link refid="_backed_crypto_currency_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>../Currencies/CryptoCurrencies/CommodityBackedCryptoCurrency.h</label>
        <link refid="_commodity_backed_crypto_currency_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>../Currencies/CryptoCurrencies/CurrencyBackedCryptoCurrency.h</label>
        <link refid="_currency_backed_crypto_currency_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>../Currencies/CryptoCurrencies/MemeCryptoCurrency.h</label>
        <link refid="_meme_crypto_currency_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>../Currencies/CryptoCurrencies/NotBackedCryptoCurrency.h</label>
        <link refid="_not_backed_crypto_currency_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>../CryptoCurrency.h</label>
        <link refid="_crypto_currency_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Currency.h</label>
        <link refid="_currency_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>../Currencies/FiatCurrency.h</label>
        <link refid="_fiat_currency_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Utils/CurrencyFactory.cpp</label>
        <link refid="_currency_factory_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>CurrencyFactory.h</label>
        <link refid="_currency_factory_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>../../Utils/Wallet.h</label>
        <link refid="_wallet_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="12">
        <label>map</label>
      </node>
      <node id="7">
        <label>math.h</label>
      </node>
      <node id="13">
        <label>stdlib.h</label>
      </node>
      <node id="14">
        <label>time.h</label>
      </node>
      <node id="17">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;CurrencyFactory.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>CurrencyFactory::memeNames[3]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;Doge&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SOLID&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Trololo&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>CurrencyFactory::cryptoNames[5]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;BitCoin&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Etherum&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Solana&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Cardano&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Tether&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>CurrencyFactory::fiatNames[5]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;zloty&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dolar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;kuna&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;euro&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;yen&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>CurrencyFactory::algorithmNames[3]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;GCD&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BubbleSort&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BogoSort&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>CurrencyFactory::commodityNames[3]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;Cows&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;coal&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aluminium&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="class_currency_factory_1a6b5b799fee0adcd0ff295936bcfa6b6a" kindref="member">CurrencyFactory::CurrencyFactory</ref>()</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>srand(time(NULL));</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><ref refid="class_currency" kindref="compound">Currency</ref><sp/>*<ref refid="class_currency_factory_1a75fbd30235b72b571b0d6a6eaec0ae77" kindref="member">CurrencyFactory::generateFiatCurrency</ref>()</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selected<sp/>=<sp/>rand()<sp/>%<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(fiatNames)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(fiatNames[0]);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_currency" kindref="compound">Currency</ref><sp/>*fiat<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_fiat_currency" kindref="compound">FiatCurrency</ref>(0,<sp/>fiatNames[selected],<sp/>rand()<sp/>%<sp/>2);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>createdCurrenciesNames.push_back(fiatNames[selected]);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>fiatNames[selected]<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>To<sp/>always<sp/>have<sp/>unique<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;(*fiat<sp/>+=<sp/>(rand()<sp/>%<sp/>25<sp/>+<sp/>1));<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="class_currency" kindref="compound">Currency</ref><sp/>*<ref refid="class_currency_factory_1acc8e61d01acdbdf91d2fa02dc427d1ca" kindref="member">CurrencyFactory::generateCryptoCurrency</ref>()</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selected_type<sp/>=<sp/>rand()<sp/>%<sp/>5;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_currency" kindref="compound">Currency</ref><sp/>*crypto;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//At<sp/>first<sp/>I<sp/>used<sp/>Case<sp/>statement,<sp/>but<sp/>I<sp/>am<sp/>so<sp/>used<sp/>to<sp/>Python<sp/>that<sp/>I<sp/>preffered<sp/>if<sp/>eventually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selected_type<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selected_name<sp/>=<sp/>rand()<sp/>%<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(memeNames)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(memeNames[0]);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crypto<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_meme_crypto_currency" kindref="compound">MemeCryptoCurrency</ref>(0,<sp/>memeNames[selected_name]<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Coin&quot;</highlight><highlight class="normal">,<sp/>rand()<sp/>%<sp/>20,<sp/>memeNames[selected_name]);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createdCurrenciesNames.push_back(memeNames[selected_name]<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Coin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memeNames[selected_name]<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selected_type<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selected_name<sp/>=<sp/>rand()<sp/>%<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(algorithmNames)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(algorithmNames[0]);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crypto<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_not_backed_crypto_currency" kindref="compound">NotBackedCryptoCurrency</ref>(0,<sp/>algorithmNames[selected_name]<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Coin&quot;</highlight><highlight class="normal">,<sp/>rand()<sp/>%<sp/>30,<sp/>algorithmNames[selected_name]);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createdCurrenciesNames.push_back(algorithmNames[selected_name]<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Coin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>algorithmNames[selected_name]<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selected_type<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selected_name<sp/>=<sp/>rand()<sp/>%<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(commodityNames)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(commodityNames[0]);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crypto<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_commodity_backed_crypto_currency" kindref="compound">CommodityBackedCryptoCurrency</ref>(0,<sp/>commodityNames[selected_name]<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Coin&quot;</highlight><highlight class="normal">,<sp/>rand()<sp/>%<sp/>30,<sp/>rand()<sp/>%<sp/>10000,<sp/>commodityNames[selected_name]);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createdCurrenciesNames.push_back(commodityNames[selected_name]<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Coin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commodityNames[selected_name]<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selected_type<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selected_name<sp/>=<sp/>rand()<sp/>%<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cryptoNames)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cryptoNames[0]);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crypto<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_currency_backed_crypto_currency" kindref="compound">CurrencyBackedCryptoCurrency&lt;CryptoCurrency&gt;</ref>(0,<sp/>cryptoNames[selected_name],<sp/>rand()<sp/>%<sp/>30,<sp/>rand()<sp/>%<sp/>10000,<sp/>commodityNames[selected_name]);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createdCurrenciesNames.push_back(cryptoNames[selected_name]);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cryptoNames[selected_name]<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selected_name<sp/>=<sp/>rand()<sp/>%<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cryptoNames)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cryptoNames[0]);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crypto<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_currency_backed_crypto_currency" kindref="compound">CurrencyBackedCryptoCurrency&lt;FiatCurrency&gt;</ref>(0,<sp/>cryptoNames[selected_name],<sp/>rand()<sp/>%<sp/>30,<sp/>rand()<sp/>%<sp/>10000,<sp/>fiatNames[selected_name]);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createdCurrenciesNames.push_back(cryptoNames[selected_name]);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cryptoNames[selected_name]<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;(*crypto<sp/>+=<sp/>(rand()<sp/>%<sp/>25<sp/>+<sp/>1));<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal">vector&lt;string&gt;<sp/><ref refid="class_currency_factory_1ac8c95a7494324d65634fb9561c4e4989" kindref="member">CurrencyFactory::getCreatedCurrenciesNames</ref>()</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>createdCurrenciesNames;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Utils/CurrencyFactory.cpp"/>
  </compounddef>
</doxygen>
