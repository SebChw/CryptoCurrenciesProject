<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="class_currency_exchange" kind="class" language="C++" prot="public">
    <compoundname>CurrencyExchange</compoundname>
    <includes refid="_currency_exchange_8h" local="no">CurrencyExchange.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_currency_exchange_1a84c581aaa8fb797e1adaf14f777c2766" prot="private" static="no" mutable="no">
        <type>map&lt; string, map&lt; string, float &gt; &gt;</type>
        <definition>map&lt;string, map&lt;string, float&gt; &gt; CurrencyExchange::exchangeRates</definition>
        <argsstring></argsstring>
        <name>exchangeRates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/CurrencyExchange.h" line="19" column="9" bodyfile="Utils/CurrencyExchange.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_currency_exchange_1a9fb56f0a2a307c1388d8fe22527cdd52" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float CurrencyExchange::pSell</definition>
        <argsstring></argsstring>
        <name>pSell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/CurrencyExchange.h" line="20" column="11" bodyfile="Utils/CurrencyExchange.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_currency_exchange_1a2e806dc2b28041763fd5a76501421fb9" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float CurrencyExchange::pBuy</definition>
        <argsstring></argsstring>
        <name>pBuy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/CurrencyExchange.h" line="21" column="11" bodyfile="Utils/CurrencyExchange.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_currency_exchange_1a1b2b16633734645b11302f7287d693ec" prot="private" static="no" mutable="no">
        <type>default_random_engine</type>
        <definition>default_random_engine CurrencyExchange::generator</definition>
        <argsstring></argsstring>
        <name>generator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/CurrencyExchange.h" line="22" column="27" bodyfile="Utils/CurrencyExchange.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_currency_exchange_1a989b302d9fcc65bb157ff17a5a31971c" prot="private" static="no" mutable="no">
        <type>bernoulli_distribution</type>
        <definition>bernoulli_distribution CurrencyExchange::bernoulli</definition>
        <argsstring></argsstring>
        <name>bernoulli</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/CurrencyExchange.h" line="23" column="28" bodyfile="Utils/CurrencyExchange.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_currency_exchange_1ab80538b4ae6eff8eabe87e079833e1a5" prot="private" static="no" mutable="no">
        <type>uniform_real_distribution&lt; float &gt;</type>
        <definition>uniform_real_distribution&lt;float&gt; CurrencyExchange::uniform</definition>
        <argsstring></argsstring>
        <name>uniform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/CurrencyExchange.h" line="24" column="31" bodyfile="Utils/CurrencyExchange.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_currency_exchange_1a5cf83e70435b6c7f319e610c43347583" prot="private" static="no" mutable="no">
        <type><ref refid="class_currency_rates_provider" kindref="compound">CurrencyRatesProvider</ref> *</type>
        <definition>CurrencyRatesProvider* CurrencyExchange::currencyRatesProvider</definition>
        <argsstring></argsstring>
        <name>currencyRatesProvider</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/CurrencyExchange.h" line="25" column="27" bodyfile="Utils/CurrencyExchange.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_currency_exchange_1a8e0449da8f281ab5b66a722be6505ca7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CurrencyExchange::CurrencyExchange</definition>
        <argsstring>(float, CurrencyRatesProvider *)</argsstring>
        <name>CurrencyExchange</name>
        <param>
          <type>float</type>
          <defname>pS</defname>
        </param>
        <param>
          <type><ref refid="class_currency_rates_provider" kindref="compound">CurrencyRatesProvider</ref> *</type>
          <defname>c</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pS</parametername>
</parameternamelist>
<parameterdescription>
<para>Probability of selling crypto, probability of buying is 1-pS </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>currencyRatesProvider</parametername>
</parameternamelist>
<parameterdescription>
<para>object from which we can obtain Rates of two currencies </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/CurrencyExchange.h" line="28" column="5" bodyfile="Utils/CurrencyExchange.cpp" bodystart="4" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="class_currency_exchange_1a1e32972d916fbd25640218598d77ebda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CurrencyExchange::toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <briefdescription>
<para>Function that prints some encouraging prompt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/CurrencyExchange.h" line="29" column="10" bodyfile="Utils/CurrencyExchange.cpp" bodystart="25" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_currency_exchange_1a203e466a38a61f91fb80e15605ba4d14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float CurrencyExchange::calculate</definition>
        <argsstring>(float, string, string)</argsstring>
        <name>calculate</name>
        <param>
          <type>float</type>
          <defname>how_much</defname>
        </param>
        <param>
          <type>string</type>
          <defname>of_what</defname>
        </param>
        <param>
          <type>string</type>
          <defname>to_what</defname>
        </param>
        <briefdescription>
<para>Function that calculate how much of to_what currency we will obtain by exchaning it with of_what. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>how_much</parametername>
</parameternamelist>
<parameterdescription>
<para>how much money we want to exchange </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>of_what</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the currency we want to exchange </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to_what</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the currency we want to obtain </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/CurrencyExchange.h" line="30" column="11" bodyfile="Utils/CurrencyExchange.cpp" bodystart="17" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="class_currency_exchange_1a85eeeccb933a4f18d1c4fbf5786bdf6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CurrencyExchange::exchange</definition>
        <argsstring>(Currency *, Currency *, Wallet&lt; Currency &gt; *)</argsstring>
        <name>exchange</name>
        <param>
          <type><ref refid="class_currency" kindref="compound">Currency</ref> *</type>
          <defname>cur1</defname>
        </param>
        <param>
          <type><ref refid="class_currency" kindref="compound">Currency</ref> *</type>
          <defname>cur2</defname>
        </param>
        <param>
          <type><ref refid="class_wallet" kindref="compound">Wallet</ref>&lt; <ref refid="class_currency" kindref="compound">Currency</ref> &gt; *</type>
          <defname>w</defname>
        </param>
        <briefdescription>
<para>Function performing exchange between two currency objects. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cur1</parametername>
</parameternamelist>
<parameterdescription>
<para>currency that we want to exchange </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cur2</parametername>
</parameternamelist>
<parameterdescription>
<para>currency to which we will exchange </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_wallet" kindref="compound">Wallet</ref> from which we will delete given currency if it&apos;s balance is below 0.1 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/CurrencyExchange.h" line="31" column="10" bodyfile="Utils/CurrencyExchange.cpp" bodystart="36" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_currency_exchange_1a35855710b354e685f18e032b91313420" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CurrencyExchange::trade</definition>
        <argsstring>(Trader &amp;)</argsstring>
        <name>trade</name>
        <param>
          <type><ref refid="class_trader" kindref="compound">Trader</ref> &amp;</type>
          <defname>trader</defname>
        </param>
        <briefdescription>
<para>Function performing simulation in which we constantly either sell crypto or buy crypto. </para>
        </briefdescription>
        <detaileddescription>
<para>Simulation ends When trader either dosn&apos;t have any real money or crypto money. Every time user is asked whether to continue or not <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trader</parametername>
</parameternamelist>
<parameterdescription>
<para>trader on whose wallet we will be performin exchanges </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/CurrencyExchange.h" line="32" column="10" bodyfile="Utils/CurrencyExchange.cpp" bodystart="63" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_currency_exchange_1a67713fe5bb820fccfb3607de35ec8a8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CurrencyExchange::simulateRanking</definition>
        <argsstring>()</argsstring>
        <name>simulateRanking</name>
        <briefdescription>
<para>Function showing feature of ranking system. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/CurrencyExchange.h" line="33" column="10" bodyfile="Utils/CurrencyExchange.cpp" bodystart="89" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_currency_exchange_1a46859fd96fcfa7f8ce73697ead8d8aba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CurrencyExchange::simulateMining</definition>
        <argsstring>()</argsstring>
        <name>simulateMining</name>
        <briefdescription>
<para>Function showing feature of mining. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Utils/CurrencyExchange.h" line="34" column="10" bodyfile="Utils/CurrencyExchange.cpp" bodystart="123" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_currency_exchange_1a2706b2303f72012155c03b50d68ac4d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CurrencyExchange::simulateBackedCurrencies</definition>
        <argsstring>()</argsstring>
        <name>simulateBackedCurrencies</name>
        <briefdescription>
<para>Function showing feature of backedCurrencies. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Here C++ won with me :( I designed it poorly and it wouldn&apos;t generelize easily</para>
        </inbodydescription>
        <location file="Utils/CurrencyExchange.h" line="35" column="10" bodyfile="Utils/CurrencyExchange.cpp" bodystart="154" bodyend="180"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class imitating some MarketPlace where we can exchange money and gamble. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Utils/CurrencyExchange.h" line="17" column="1" bodyfile="Utils/CurrencyExchange.h" bodystart="18" bodyend="36"/>
    <listofallmembers>
      <member refid="class_currency_exchange_1a989b302d9fcc65bb157ff17a5a31971c" prot="private" virt="non-virtual"><scope>CurrencyExchange</scope><name>bernoulli</name></member>
      <member refid="class_currency_exchange_1a203e466a38a61f91fb80e15605ba4d14" prot="public" virt="non-virtual"><scope>CurrencyExchange</scope><name>calculate</name></member>
      <member refid="class_currency_exchange_1a8e0449da8f281ab5b66a722be6505ca7" prot="public" virt="non-virtual"><scope>CurrencyExchange</scope><name>CurrencyExchange</name></member>
      <member refid="class_currency_exchange_1a5cf83e70435b6c7f319e610c43347583" prot="private" virt="non-virtual"><scope>CurrencyExchange</scope><name>currencyRatesProvider</name></member>
      <member refid="class_currency_exchange_1a85eeeccb933a4f18d1c4fbf5786bdf6e" prot="public" virt="non-virtual"><scope>CurrencyExchange</scope><name>exchange</name></member>
      <member refid="class_currency_exchange_1a84c581aaa8fb797e1adaf14f777c2766" prot="private" virt="non-virtual"><scope>CurrencyExchange</scope><name>exchangeRates</name></member>
      <member refid="class_currency_exchange_1a1b2b16633734645b11302f7287d693ec" prot="private" virt="non-virtual"><scope>CurrencyExchange</scope><name>generator</name></member>
      <member refid="class_currency_exchange_1a2e806dc2b28041763fd5a76501421fb9" prot="private" virt="non-virtual"><scope>CurrencyExchange</scope><name>pBuy</name></member>
      <member refid="class_currency_exchange_1a9fb56f0a2a307c1388d8fe22527cdd52" prot="private" virt="non-virtual"><scope>CurrencyExchange</scope><name>pSell</name></member>
      <member refid="class_currency_exchange_1a2706b2303f72012155c03b50d68ac4d9" prot="public" virt="non-virtual"><scope>CurrencyExchange</scope><name>simulateBackedCurrencies</name></member>
      <member refid="class_currency_exchange_1a46859fd96fcfa7f8ce73697ead8d8aba" prot="public" virt="non-virtual"><scope>CurrencyExchange</scope><name>simulateMining</name></member>
      <member refid="class_currency_exchange_1a67713fe5bb820fccfb3607de35ec8a8b" prot="public" virt="non-virtual"><scope>CurrencyExchange</scope><name>simulateRanking</name></member>
      <member refid="class_currency_exchange_1a1e32972d916fbd25640218598d77ebda" prot="public" virt="non-virtual"><scope>CurrencyExchange</scope><name>toString</name></member>
      <member refid="class_currency_exchange_1a35855710b354e685f18e032b91313420" prot="public" virt="non-virtual"><scope>CurrencyExchange</scope><name>trade</name></member>
      <member refid="class_currency_exchange_1ab80538b4ae6eff8eabe87e079833e1a5" prot="private" virt="non-virtual"><scope>CurrencyExchange</scope><name>uniform</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
